local Synergy = Instance.new("ScreenGui")
local Main = Instance.new("Frame")
local UICorner = Instance.new("UICorner")
local Header = Instance.new("Frame")
local UICorner_2 = Instance.new("UICorner")
local Frame = Instance.new("Frame")
local UICorner_3 = Instance.new("UICorner")
local _ = Instance.new("TextButton")
local X = Instance.new("TextButton")
local Frame_2 = Instance.new("Frame")
local ItemsTab = Instance.new("ScrollingFrame")
local UIListLayout_2 = Instance.new("UIListLayout")
local UIPadding = Instance.new("UIPadding")
local Containerp = Instance.new("Folder")

Containerp.Name = "Containerp"
Containerp.Parent = Main
--Properties:

Synergy.Name = "Synergy"
Synergy.Parent = game.CoreGui
Synergy.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

Main.Name = "Main"
Main.Parent = Synergy
Main.Active = true
Main.BackgroundColor3 = Color3.fromRGB(57, 57, 57)
Main.BorderSizePixel = 0
Main.Position = UDim2.new(0.136727616, 0, 0.0694779232, 0)
Main.Size = UDim2.new(0.59, 0, 0.84, 0)
Main.Draggable = true

UICorner.CornerRadius = UDim.new(0, 4)
UICorner.Parent = Main

Header.Name = "Header"
Header.Parent = Main
Header.BackgroundColor3 = Color3.fromRGB(27, 27, 27)
Header.BorderSizePixel = 0
Header.Position = UDim2.new(0.001, 0,-0.001, 0)
Header.Size = UDim2.new(0.998, 0,0.073, 0)

local es = Instance.new("UIStroke")


es.Name = "UIStroke"
es.Color = Color3.new(0,0,0)
es.Parent = Frame
es.ApplyStrokeMode = "Border"
es.Thickness = 1
es.Transparency = 0


UICorner_2.CornerRadius = UDim.new(0, 4)
UICorner_2.Parent = Header

Frame.Parent = Header
Frame.BackgroundColor3 = Color3.fromRGB(17, 17, 17)
Frame.BorderSizePixel = 0
Frame.Position = UDim2.new(0.842, 0,0.224, 0)
Frame.Size = UDim2.new(0.138, 0,0.674, 0)
Frame.ZIndex = 2

UICorner_3.CornerRadius = UDim.new(1, 0)
UICorner_3.Parent = Frame

_.Name = "_"
_.Parent = Frame
_.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
_.BackgroundTransparency = 1.000
_.Position = UDim2.new(0, 0,-0.35, 0)
_.Size = UDim2.new(0.612, 0,1.279, 0)
_.Font = "JosefinSans"
_.Text = "_"
_.TextColor3 = Color3.fromRGB(255, 255, 255)
_.TextScaled = true
_.TextSize = 14.000
_.TextWrapped = true

X.Name = "X"
X.Parent = Frame
X.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
X.BackgroundTransparency = 1.000
X.Position = UDim2.new(0.486, 0,0.158, 0)
X.Size = UDim2.new(0.517, 0,0.797, 0)
X.Font = "JosefinSans"
X.Text = "X"
X.TextColor3 = Color3.fromRGB(255, 255, 255)
X.TextScaled = true
X.TextSize = 14.000
X.TextWrapped = true

Frame_2.Parent = Main
Frame_2.BackgroundColor3 = Color3.fromRGB(27, 27, 27)
Frame_2.BorderSizePixel = 0
Frame_2.Position = UDim2.new(-0, 0,0.067, 0)
Frame_2.Size = UDim2.new(1, 0,0.021, 0)

ItemsTab.Name = "ItemsTab"
ItemsTab.Parent = Main
ItemsTab.Active = true
ItemsTab.BackgroundColor3 = Color3.fromRGB(27, 27, 27)
ItemsTab.BorderSizePixel = 0
ItemsTab.Position = UDim2.new(0.007, 0,0.103, 0)
ItemsTab.Size = UDim2.new(0.231, 0,0.884, 0)
ItemsTab.ScrollBarThickness = 0

UIListLayout_2.Parent = ItemsTab
UIListLayout_2.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout_2.Padding = UDim.new(0, 4)



UIPadding.Parent = ItemsTab
UIPadding.PaddingLeft = UDim.new(0.150000006, 0)
UIPadding.PaddingTop = UDim.new(0, 8)

-- Scripts:

local function JJYLZB_fake_script() -- _.LocalScript 
	local script = Instance.new('LocalScript', _)

	script.Parent.MouseButton1Click:Connect(function()
		Synergy.Enabled = false
	end)
end
coroutine.wrap(JJYLZB_fake_script)()
local function CANKQ_fake_script() -- X.LocalScript 
	local script = Instance.new('LocalScript', X)

	script.Parent.MouseButton1Click:Connect(function()
		Synergy:Destroy()
	end)
end
coroutine.wrap(CANKQ_fake_script)()

local lib = {}

function lib:MakeTitle(name)
	local Name = Instance.new("TextLabel")

	Name.Name = "Name"
	Name.Parent = Header
	Name.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Name.Position = UDim2.new(0.0956727192, 0, 0.339262357, 0)
	Name.Size = UDim2.new(0.689545751, 0, 0.614721537, 0)
	Name.Font = "JosefinSans"
	Name.Text = name
	Name.TextColor3 = Color3.fromRGB(255, 255, 255)
	Name.TextScaled = true
	Name.TextSize = 14.000
	Name.TextWrapped = true
	Name.TextXAlignment = Enum.TextXAlignment.Left
	Name.BackgroundTransparency = 1
end

function lib:MakeTab(nametab)
	local Frame1 = Instance.new("ScrollingFrame")
	local UICorner = Instance.new("UICorner")
	local UIListLayout = Instance.new("UIListLayout")
	local UIPadding = Instance.new("UIPadding")

	Frame1.Name = nametab.." Container"
	Frame1.Parent = Containerp
	Frame1.Active = true
	Frame1.BackgroundColor3 = Color3.fromRGB(47, 47, 47)
	Frame1.BorderSizePixel = 0
	Frame1.Position = UDim2.new(0.25, 0,0.101, 0)
	Frame1.Size = UDim2.new(0.731, 0, 0.882, 0)
	Frame1.ScrollBarThickness = 0

	UIListLayout.Parent = Frame1
	UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
	UIListLayout.Padding = UDim.new(0, 6)

	UIPadding.Parent = Frame1
	UIPadding.PaddingLeft = UDim.new(0, 9)
	UIPadding.PaddingTop = UDim.new(0, 9)

	local Button = Instance.new("TextButton")
	Button.Name = "Button"
	Button.Parent = ItemsTab
	Button.BackgroundColor3 = Color3.fromRGB(17, 17, 17)
	Button.BorderColor3 = Color3.fromRGB(255, 255, 255)
	Button.BorderSizePixel = 0
	Button.Position = UDim2.new(0.15000008, 0, 0.017789891, 0)
	Button.Size = UDim2.new(0.789069653, 0, 0.0293348748, 0)
	Button.Text = nametab
	Button.Font = "JosefinSans"
	Button.TextColor3 = Color3.fromRGB(255, 255, 255)
	Button.TextSize = 14.000

	local e = Instance.new("UIStroke")


	e.Name = "UIStroke"
	e.Color = Color3.new(0,0,0)
	e.Parent = Button
	e.ApplyStrokeMode = "Border"
	e.Thickness = 1
	e.Transparency = 0

	local UICorner_4 = Instance.new("UICorner")
	UICorner_4.CornerRadius = UDim.new(0, 4)
	UICorner_4.Parent = Button

	Button.MouseButton1Click:Connect(function()
		for i,v in next, Containerp:GetChildren() do
			v.Visible = false
		end	
		Frame1.Visible = true
	end)

	return Frame1
end


function lib:MakeDropdown(parent, DropdownMainText, Contents, callback)
	DropdownMainText = DropdownMainText or "Dropdown Text"
	callback = callback or function() end	

	local PageDropdownFrame = Instance.new("Frame")
	local DropdownText = Instance.new("TextLabel")
	local DropdownFrameCorner = Instance.new("UICorner")
	local DropdownArrow = Instance.new("ImageButton")
	local DropdownMainButton = Instance.new("TextButton")

	----------Dropdown List----------

	local PageDropdownScrollingFrame = Instance.new("ScrollingFrame")
	local s = Instance.new("UICorner")
	local h = Instance.new("UICorner")

	local DropdownScrollListLayout = Instance.new("UIListLayout")
	local DropdownScrollPadding = Instance.new("UIPadding")

	s.Parent = PageDropdownScrollingFrame
	s.CornerRadius = UDim.new(0, 4)

	h.Parent = PageDropdownScrollingFrame
	h.CornerRadius = UDim.new(0, 4)
	local e = Instance.new("UIStroke")


	e.Name = "UIStroke"
	e.Color = Color3.new(0,0,0)
	e.Parent = PageDropdownFrame
	e.ApplyStrokeMode = "Border"
	e.Thickness = 1
	e.Transparency = 0

	----------Dropdown List----------


	PageDropdownFrame.Name = "PageDropdownFrame"
	PageDropdownFrame.Parent = parent
	PageDropdownFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	PageDropdownFrame.BorderSizePixel = 0
	PageDropdownFrame.Position = UDim2.new(0.0211267602, 0, 0.0235245991, 0)
	PageDropdownFrame.Size = UDim2.new(0.984, 0,0.04, 0)

	DropdownText.Name = "DropdownText"
	DropdownText.Parent = PageDropdownFrame
	DropdownText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	DropdownText.BackgroundTransparency = 1.000
	DropdownText.BorderSizePixel = 0
	DropdownText.Position = UDim2.new(0.0294117648, 0, 0.23, 0)
	DropdownText.Size = UDim2.new(0, 300, 0, 25)
	DropdownText.Font = "JosefinSans"
	DropdownText.Text = DropdownMainText
	DropdownText.TextColor3 = Color3.fromRGB(255, 255, 255)
	DropdownText.TextSize = 15.000
	DropdownText.TextScaled = true
	DropdownText.TextStrokeTransparency = 1
	DropdownText.TextTransparency = 0
	DropdownText.TextWrapped = true
	DropdownText.TextXAlignment = Enum.TextXAlignment.Left

	DropdownFrameCorner.Name = "DropdownFrameCorner"
	DropdownFrameCorner.Parent = PageDropdownFrame

	DropdownArrow.Name = "DropdownArrow"
	DropdownArrow.Parent = PageDropdownFrame
	DropdownArrow.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	DropdownArrow.BackgroundTransparency = 1.000
	DropdownArrow.Position = UDim2.new(0.925000012, 0, 0.25, 0)
	DropdownArrow.Rotation = 180
	DropdownArrow.Size = UDim2.new(0, 20, 0, 20)
	DropdownArrow.Image = "http://www.roblox.com/asset/?id=71659683"

	DropdownMainButton.Name = "DropdownMainButton"
	DropdownMainButton.Parent = PageDropdownFrame
	DropdownMainButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	DropdownMainButton.BackgroundTransparency = 1.000
	DropdownMainButton.BorderSizePixel = 0
	DropdownMainButton.Size = UDim2.new(1, 0, 1, 0)
	DropdownMainButton.Font = "JosefinSans"
	DropdownMainButton.Text = ""
	DropdownMainButton.TextColor3 = Color3.fromRGB(0, 0, 0)
	DropdownMainButton.TextSize = 14.000


	----------Dropdown List----------
	---PAGINA
	PageDropdownScrollingFrame.Name = "PageDropdownScrollingFrame"
	PageDropdownScrollingFrame.Parent = parent
	PageDropdownScrollingFrame.Active = false
	PageDropdownScrollingFrame.Visible = false
	PageDropdownScrollingFrame.BackgroundColor3 = Color3.fromRGB(37, 37, 37)
	PageDropdownScrollingFrame.BorderSizePixel = 0
	PageDropdownScrollingFrame.Position = UDim2.new(0.0633802786, 0, 0.156156242, 0)
	PageDropdownScrollingFrame.Size = UDim2.new(0.982, 0,0.153, 0)
	PageDropdownScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
	PageDropdownScrollingFrame.ScrollBarThickness = 7
	local m = Instance.new("UIStroke")


	m.Name = "UIStroke"
	m.Color = Color3.new(0,0,0)
	m.Parent = PageDropdownScrollingFrame
	m.ApplyStrokeMode = "Border"
	m.Thickness = 1
	m.Transparency = 0


	DropdownScrollListLayout.Name = "DropdownScrollListLayout"
	DropdownScrollListLayout.Parent = PageDropdownScrollingFrame
	DropdownScrollListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
	DropdownScrollListLayout.SortOrder = Enum.SortOrder.LayoutOrder
	DropdownScrollListLayout.Padding = UDim.new(0, 5)

	DropdownScrollPadding.Name = "DropdownScrollPadding"
	DropdownScrollPadding.Parent = PageDropdownScrollingFrame
	DropdownScrollPadding.PaddingTop = UDim.new(0, 5)

	----------Dropdown List----------

	local function TEGYQ_fake_script() -- PageDropdownScrollingFrame.DropdownScrollFixer 
		local script = Instance.new('Script', PageDropdownScrollingFrame)

		spawn(function()
			getgenv().autofixertheui = true
			while autofixertheui do wait()
				pcall(function()
					local function UpdateCanvasSize(Canvas, Constraint)
						Canvas.CanvasSize = UDim2.new(0, 0, 0, Constraint.AbsoluteContentSize.Y+10)
					end

					UpdateCanvasSize(script.Parent, script.Parent.DropdownScrollListLayout)
				end)
			end
		end)
	end
	coroutine.wrap(TEGYQ_fake_script)()


	local function onInputBegan(input, gameProcessed)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			if DropdownArrow.Rotation == 90 then
				local TweenService = game:GetService("TweenService")
				local Object = DropdownArrow -- The object you want to tween.
				local tweenInfo = TweenInfo.new(
					0.2, -- The time the tween takes to complete
					Enum.EasingStyle.Linear, -- The tween style.
					Enum.EasingDirection.Out, -- EasingDirection
					.5, -- How many times you want the tween to repeat. If you make it less than 0 it will repeat forever.
					false, -- Reverse?
					0 -- Delay
				)
				local Tween = TweenService:Create(Object, tweenInfo, {Rotation = 180}) -- Creates the tween with the TweenInfo and what properties you want to change
				Tween:Play() -- Plays the tween
				wait(0.2)
				PageDropdownScrollingFrame.Active = false
				PageDropdownScrollingFrame.Visible = false
			elseif DropdownArrow.Rotation == 180.000 then
				local TweenService = game:GetService("TweenService")
				local Object = DropdownArrow -- The object you want to tween.
				local tweenInfo = TweenInfo.new(
					0.2, -- The time the tween takes to complete
					Enum.EasingStyle.Linear, -- The tween style.
					Enum.EasingDirection.Out, -- EasingDirection
					.5, -- How many times you want the tween to repeat. If you make it less than 0 it will repeat forever.
					false, -- Reverse?
					0 -- Delay
				)
				local Tween = TweenService:Create(Object, tweenInfo, {Rotation = 90}) -- Creates the tween with the TweenInfo and what properties you want to change
				Tween:Play() -- Plays the tween
				wait(0.2)
				PageDropdownScrollingFrame.Active = true
				PageDropdownScrollingFrame.Visible = true
			end 
		end
	end


	DropdownMainButton.InputBegan:Connect(onInputBegan)


	local ChangeFunction = callback
	local function CreateContents(List)
		for i,v in ipairs(List) do
			local DropdownTextButton = Instance.new("TextButton")
			local DropdownTextButtonCorner = Instance.new("UICorner")

			DropdownTextButton.Name = v
			DropdownTextButton.Parent = PageDropdownScrollingFrame
			DropdownTextButton.BackgroundColor3 = Color3.fromRGB(17, 17, 17)
			DropdownTextButton.Size = UDim2.new(0, 510, 0, 25)
			DropdownTextButton.Font = "JosefinSans"
			DropdownTextButton.Text = v
			DropdownTextButton.TextColor3 = Color3.fromRGB(255, 255, 255)
			DropdownTextButton.TextSize = 15.000
			DropdownTextButton.TextStrokeTransparency = 1
			DropdownTextButton.TextTransparency = 0
			DropdownTextButton.TextWrapped = true

			DropdownTextButtonCorner.CornerRadius = UDim.new(0, 5)
			DropdownTextButtonCorner.Name = "DropdownTextButtonCorner"
			DropdownTextButtonCorner.Parent = DropdownTextButton

			local function onInputBegan(input, gameProcessed)
				if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
					DropdownText.Text = DropdownTextButton.Text
					coroutine.wrap(ChangeFunction)(DropdownTextButton.Text)
				end
			end
			DropdownTextButton.InputBegan:Connect(onInputBegan)
		end
	end

	CreateContents(Contents)

end

function lib:MakePicker(parent, text, callback)
callback = callback or function() end
	-- Gui to Lua
	-- Version: 3.2

	-- Instances:

	local Picker = Instance.new("Frame")
	local UICorner = Instance.new("UICorner")
	local ColorPickerText = Instance.new("TextLabel")
	local Action = Instance.new("TextButton")
	local Color = Instance.new("Frame")
	local UICorner_2 = Instance.new("UICorner")
	local ColorUI = Instance.new("Frame")
	local ColorPickers = Instance.new("Frame")
	local Vertical = Instance.new("Frame")
	local ColorPickerArea = Instance.new("Frame")
	local Picker_2 = Instance.new("Frame")
	local UICorner_3 = Instance.new("UICorner")
	local UIGradent = Instance.new("UIGradient")
	local UICorner_4 = Instance.new("UICorner")
	local UICorner_5 = Instance.new("UICorner")
	local Horizontal = Instance.new("Frame")
	local UICorner_6 = Instance.new("UICorner")
	local ColorPickerArea_2 = Instance.new("Frame")
	local Picker_3 = Instance.new("Frame")
	local UICorner_7 = Instance.new("UICorner")
	local UICorner_8 = Instance.new("UICorner")
	local Rainbow = Instance.new("UIGradient")
	local UICorner_9 = Instance.new("UICorner")
	local RGBInput = Instance.new("Frame")
	local UICorner_10 = Instance.new("UICorner")
	local R = Instance.new("Frame")
	local ColorName = Instance.new("TextLabel")
	local ValueBox = Instance.new("TextBox")
	local UICorner_11 = Instance.new("UICorner")
	local G = Instance.new("Frame")
	local ColorName_2 = Instance.new("TextLabel")
	local ValueBox_2 = Instance.new("TextBox")
	local UICorner_12 = Instance.new("UICorner")
	local B = Instance.new("Frame")
	local ColorName_3 = Instance.new("TextLabel")
	local ValueBox_3 = Instance.new("TextBox")
	local UICorner_13 = Instance.new("UICorner")

	--Properties:

	Picker.Name = "Picker"
	Picker.Parent = parent
	Picker.BackgroundColor3 = Color3.fromRGB(27, 27, 27)
	Picker.Position = UDim2.new(0.0155732548, 0, 0.615317941, 0)
	Picker.Size = UDim2.new(0, 562, 0, 38)

	UICorner.Parent = Picker

	ColorPickerText.Name = "ColorPickerText"
	ColorPickerText.Parent = Picker
	ColorPickerText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	ColorPickerText.BackgroundTransparency = 1.000
	ColorPickerText.Position = UDim2.new(0.0154185444, 0, 0.263157904, 0)
	ColorPickerText.Size = UDim2.new(0, 439, 0, 22)
	ColorPickerText.Font = Enum.Font.JosefinSans
	ColorPickerText.Text = text
	ColorPickerText.TextColor3 = Color3.fromRGB(225, 225, 225)
	ColorPickerText.TextScaled = true
	ColorPickerText.TextSize = 14.000
	ColorPickerText.TextWrapped = true
	ColorPickerText.TextXAlignment = Enum.TextXAlignment.Left

	Action.Name = "Action"
	Action.Parent = Picker
	Action.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Action.BackgroundTransparency = 1.000
	Action.Size = UDim2.new(1, 0, 1, 0)
	Action.Font = Enum.Font.SourceSans
	Action.Text = ""
	Action.TextColor3 = Color3.fromRGB(0, 0, 0)
	Action.TextSize = 14.000

	Color.Name = "Color"
	Color.Parent = Picker
	Color.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
	Color.Position = UDim2.new(0.896475792, 0, 0.210526317, 0)
	Color.Size = UDim2.new(0, 45, 0, 21)

	UICorner_2.Parent = Color

	ColorUI.Name = "ColorUI"
	ColorUI.Parent = Picker
	ColorUI.BackgroundColor3 = Color3.fromRGB(23, 23, 23)
	ColorUI.BorderColor3 = Color3.fromRGB(38, 38, 38)
	ColorUI.BorderSizePixel = 2
	ColorUI.Position = UDim2.new(0, 0, 1, 0)
	ColorUI.Size = UDim2.new(0, 453, 0, 129)
	ColorUI.Visible = false

	ColorPickers.Name = "ColorPickers"
	ColorPickers.Parent = ColorUI
	ColorPickers.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	ColorPickers.BackgroundTransparency = 1.000
	ColorPickers.Position = UDim2.new(-0.00180119276, 0, -0.00353783369, 0)
	ColorPickers.Size = UDim2.new(1, 0, 1, 0)

	Vertical.Name = "Vertical"
	Vertical.Parent = ColorPickers
	Vertical.AnchorPoint = Vector2.new(0.5, 0.5)
	Vertical.BackgroundColor3 = Color3.fromRGB(250, 250, 250)
	Vertical.BackgroundTransparency = 1.000
	Vertical.BorderSizePixel = 0
	Vertical.Position = UDim2.new(0.927431822, 0, 0.499000013, 0)
	Vertical.Size = UDim2.new(0.107632093, 0, 0.918971777, 0)

	ColorPickerArea.Name = "ColorPickerArea"
	ColorPickerArea.Parent = Vertical
	ColorPickerArea.Active = true
	ColorPickerArea.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	ColorPickerArea.BorderSizePixel = 0
	ColorPickerArea.Position = UDim2.new(0.596175492, 0, 0.00110334251, 0)
	ColorPickerArea.Size = UDim2.new(0.568842232, 0, 0.933330476, 0)

	Picker_2.Name = "Picker"
	Picker_2.Parent = ColorPickerArea
	Picker_2.BackgroundColor3 = Color3.fromRGB(27, 42, 53)
	Picker_2.BorderColor3 = Color3.fromRGB(27, 42, 53)
	Picker_2.BorderSizePixel = 0
	Picker_2.Position = UDim2.new(0, 0, 0.5, 0)
	Picker_2.Size = UDim2.new(1, 0, 0.0149999997, 0)

	UICorner_3.CornerRadius = UDim.new(1, 0)
	UICorner_3.Parent = Picker_2

	UIGradent.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(0.50, Color3.fromRGB(255, 0, 0)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(0, 0, 0))}
	UIGradent.Rotation = 90
	UIGradent.Name = "UIGradent"
	UIGradent.Parent = ColorPickerArea

	UICorner_4.CornerRadius = UDim.new(0, 10)
	UICorner_4.Parent = ColorPickerArea

	UICorner_5.CornerRadius = UDim.new(0, 10)
	UICorner_5.Parent = Vertical

	Horizontal.Name = "Horizontal"
	Horizontal.Parent = ColorPickers
	Horizontal.AnchorPoint = Vector2.new(0.5, 0.5)
	Horizontal.BackgroundColor3 = Color3.fromRGB(250, 250, 250)
	Horizontal.BackgroundTransparency = 1.000
	Horizontal.BorderSizePixel = 0
	Horizontal.Position = UDim2.new(0.44618395, 0, 0.50081104, 0)
	Horizontal.Size = UDim2.new(0.892367899, 0, 0.996183217, 0)

	UICorner_6.CornerRadius = UDim.new(0, 10)
	UICorner_6.Parent = Horizontal

	ColorPickerArea_2.Name = "ColorPickerArea"
	ColorPickerArea_2.Parent = Horizontal
	ColorPickerArea_2.Active = true
	ColorPickerArea_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	ColorPickerArea_2.BorderSizePixel = 0
	ColorPickerArea_2.Position = UDim2.new(0.0196350683, 0, 0.0379530638, 0)
	ColorPickerArea_2.Size = UDim2.new(1.00899446, 0, 0.860991061, 0)

	Picker_3.Name = "Picker"
	Picker_3.Parent = ColorPickerArea_2
	Picker_3.BackgroundColor3 = Color3.fromRGB(27, 42, 53)
	Picker_3.BackgroundTransparency = 1.000
	Picker_3.BorderColor3 = Color3.fromRGB(27, 42, 53)
	Picker_3.BorderSizePixel = 0
	Picker_3.Size = UDim2.new(0.0170000009, 0, 1, 0)

	UICorner_7.CornerRadius = UDim.new(1, 0)
	UICorner_7.Parent = Picker_3

	UICorner_8.CornerRadius = UDim.new(0, 10)
	UICorner_8.Parent = ColorPickerArea_2

	Rainbow.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 0, 4)), ColorSequenceKeypoint.new(0.20, Color3.fromRGB(255, 255, 0)), ColorSequenceKeypoint.new(0.40, Color3.fromRGB(0, 255, 0)), ColorSequenceKeypoint.new(0.60, Color3.fromRGB(0, 255, 255)), ColorSequenceKeypoint.new(0.80, Color3.fromRGB(0, 0, 255)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 0, 255))}
	Rainbow.Name = "Rainbow"
	Rainbow.Parent = ColorPickerArea_2

	UICorner_9.Parent = ColorPickers

	RGBInput.Name = "RGBInput"
	RGBInput.Parent = ColorPickers
	RGBInput.AnchorPoint = Vector2.new(0.5, 0.5)
	RGBInput.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	RGBInput.Position = UDim2.new(0.434999973, 0, 0.94911629, 0)
	RGBInput.Size = UDim2.new(0.736720562, 0, 0.101767823, 0)
	RGBInput.Visible = false

	UICorner_10.CornerRadius = UDim.new(0.5, 0)
	UICorner_10.Parent = RGBInput

	R.Name = "R"
	R.Parent = RGBInput
	R.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	R.BackgroundTransparency = 1.000
	R.BorderSizePixel = 0
	R.Size = UDim2.new(0.330000013, 0, 1, 0)

	ColorName.Name = "ColorName"
	ColorName.Parent = R
	ColorName.AnchorPoint = Vector2.new(0, 0.5)
	ColorName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	ColorName.BackgroundTransparency = 1.000
	ColorName.BorderSizePixel = 0
	ColorName.Position = UDim2.new(0, 0, 0.5, 0)
	ColorName.Size = UDim2.new(0.25, 0, 0.800000012, 0)
	ColorName.Font = Enum.Font.SourceSans
	ColorName.Text = "R"
	ColorName.TextColor3 = Color3.fromRGB(0, 0, 0)
	ColorName.TextScaled = true
	ColorName.TextSize = 14.000
	ColorName.TextWrapped = true

	ValueBox.Name = "ValueBox"
	ValueBox.Parent = R
	ValueBox.AnchorPoint = Vector2.new(0, 0.5)
	ValueBox.BackgroundColor3 = Color3.fromRGB(220, 220, 220)
	ValueBox.BorderSizePixel = 0
	ValueBox.Position = UDim2.new(0.25, 0, 0.5, 0)
	ValueBox.Size = UDim2.new(0.75, 0, 0.800000012, 0)
	ValueBox.Font = Enum.Font.SourceSans
	ValueBox.Text = "0"
	ValueBox.TextColor3 = Color3.fromRGB(0, 0, 0)
	ValueBox.TextScaled = true
	ValueBox.TextSize = 14.000
	ValueBox.TextWrapped = true

	UICorner_11.CornerRadius = UDim.new(0.5, 0)
	UICorner_11.Parent = ValueBox

	G.Name = "G"
	G.Parent = RGBInput
	G.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	G.BackgroundTransparency = 1.000
	G.BorderSizePixel = 0
	G.Position = UDim2.new(0.330000013, 0, 0, 0)
	G.Size = UDim2.new(0.330000013, 0, 1, 0)

	ColorName_2.Name = "ColorName"
	ColorName_2.Parent = G
	ColorName_2.AnchorPoint = Vector2.new(0, 0.5)
	ColorName_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	ColorName_2.BackgroundTransparency = 1.000
	ColorName_2.BorderSizePixel = 0
	ColorName_2.Position = UDim2.new(0, 0, 0.5, 0)
	ColorName_2.Size = UDim2.new(0.25, 0, 0.800000012, 0)
	ColorName_2.Font = Enum.Font.SourceSans
	ColorName_2.Text = "G"
	ColorName_2.TextColor3 = Color3.fromRGB(0, 0, 0)
	ColorName_2.TextScaled = true
	ColorName_2.TextSize = 14.000
	ColorName_2.TextWrapped = true

	ValueBox_2.Name = "ValueBox"
	ValueBox_2.Parent = G
	ValueBox_2.AnchorPoint = Vector2.new(0, 0.5)
	ValueBox_2.BackgroundColor3 = Color3.fromRGB(220, 220, 220)
	ValueBox_2.BorderSizePixel = 0
	ValueBox_2.Position = UDim2.new(0.25, 0, 0.5, 0)
	ValueBox_2.Size = UDim2.new(0.75, 0, 0.800000012, 0)
	ValueBox_2.Font = Enum.Font.SourceSans
	ValueBox_2.Text = "0"
	ValueBox_2.TextColor3 = Color3.fromRGB(0, 0, 0)
	ValueBox_2.TextScaled = true
	ValueBox_2.TextSize = 14.000
	ValueBox_2.TextWrapped = true

	UICorner_12.CornerRadius = UDim.new(0.5, 0)
	UICorner_12.Parent = ValueBox_2

	B.Name = "B"
	B.Parent = RGBInput
	B.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	B.BackgroundTransparency = 1.000
	B.BorderSizePixel = 0
	B.Position = UDim2.new(0.660000026, 0, 0, 0)
	B.Size = UDim2.new(0.330000013, 0, 1, 0)

	ColorName_3.Name = "ColorName"
	ColorName_3.Parent = B
	ColorName_3.AnchorPoint = Vector2.new(0, 0.5)
	ColorName_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	ColorName_3.BackgroundTransparency = 1.000
	ColorName_3.BorderSizePixel = 0
	ColorName_3.Position = UDim2.new(0, 0, 0.5, 0)
	ColorName_3.Size = UDim2.new(0.25, 0, 0.800000012, 0)
	ColorName_3.Font = Enum.Font.SourceSans
	ColorName_3.Text = "B"
	ColorName_3.TextColor3 = Color3.fromRGB(0, 0, 0)
	ColorName_3.TextScaled = true
	ColorName_3.TextSize = 14.000
	ColorName_3.TextWrapped = true

	ValueBox_3.Name = "ValueBox"
	ValueBox_3.Parent = B
	ValueBox_3.AnchorPoint = Vector2.new(0, 0.5)
	ValueBox_3.BackgroundColor3 = Color3.fromRGB(220, 220, 220)
	ValueBox_3.BorderSizePixel = 0
	ValueBox_3.Position = UDim2.new(0.25, 0, 0.5, 0)
	ValueBox_3.Size = UDim2.new(0.75, 0, 0.800000012, 0)
	ValueBox_3.Font = Enum.Font.SourceSans
	ValueBox_3.Text = "0"
	ValueBox_3.TextColor3 = Color3.fromRGB(0, 0, 0)
	ValueBox_3.TextScaled = true
	ValueBox_3.TextSize = 14.000
	ValueBox_3.TextWrapped = true

	UICorner_13.CornerRadius = UDim.new(0.5, 0)
	UICorner_13.Parent = ValueBox_3

	-- Module Scripts:

	local fake_module_scripts = {}

	do -- nil.GetOnGradientSlider
		local script = Instance.new('ModuleScript', nil)
		script.Name = "GetOnGradientSlider"
		local function module_script()
			-- dispeller 2020
			-- Open Sourced Get On Gradient Slider module/function

			function getColor(percentage, ColorKeyPoints)
				if (percentage < 0) or (percentage>1) then
					--error'getColor percentage out of bounds!'
					warn'getColor got out of bounds percentage (less than 0 or greater than 1'
				end

				local closestToLeft = ColorKeyPoints[1]
				local closestToRight = ColorKeyPoints[#ColorKeyPoints]
				local LocalPercentage = .5
				local color = closestToLeft.Value

				-- This loop can probably be improved by doing something like a Binary search instead
				-- This should work fine though
				for i=1,#ColorKeyPoints-1 do
					if (ColorKeyPoints[i].Time <= percentage) and (ColorKeyPoints[i+1].Time >= percentage) then
						closestToLeft = ColorKeyPoints[i]
						closestToRight = ColorKeyPoints[i+1]
						LocalPercentage = (percentage-closestToLeft.Time)/(closestToRight.Time-closestToLeft.Time)
						color = closestToLeft.Value:lerp(closestToRight.Value,LocalPercentage)
						return color
					end
				end
				warn('Color not found!')
				return color
			end

			return getColor
		end
		fake_module_scripts[script] = module_script
	end


	-- Scripts:

	local function JQMX_fake_script() -- Action.LocalScript 
		local script = Instance.new('LocalScript', Action)
		local req = require
		local require = function(obj)
			local fake = fake_module_scripts[obj]
			if fake then
				return fake()
			end
			return req(obj)
		end

		local showing = false

		script.Parent.MouseButton1Down:Connect(function()
			if showing == false then
				showing = true 
				script.Parent.Parent.ColorUI.Visible = showing
			else
				showing = false 
				script.Parent.Parent.ColorUI.Visible = showing
			end
		end)
	end
	coroutine.wrap(JQMX_fake_script)()
	local function ANTLAM_fake_script() -- ColorPickers.ColorPickerLocal 
		local script = Instance.new('LocalScript', ColorPickers)
		local req = require
		local require = function(obj)
			local fake = fake_module_scripts[obj]
			if fake then
				return fake()
			end
			return req(obj)
		end

		-- dispeller 2020, modified by Stonetr03, furtherly modified by LightningLion58
		-- Color picker example

		local Player = game.Players.LocalPlayer
		local UserInputService = game:GetService('UserInputService')

		local GUI = script.Parent


		local selecting = false

		-- load the getColor function
		local getColor = require(script:WaitForChild("GetOnGradientSlider"))

		-- upon the user selecting
		function beginSelection(MainFrame, axis, frameToUpdate : Frame?, otherAxis)

			local ColorShower = script.Parent.Parent.Parent.Color or frameToUpdate.ColorShower
			local PickerArea = MainFrame.ColorPickerArea
			local Picker = PickerArea.Picker
			local Gradient = PickerArea:FindFirstChildOfClass('UIGradient')

			selecting = true
			local ColorKeyPoints = Gradient.Color.Keypoints

			repeat task.wait()
				-- left cord of ColorPickerArea in pixels
				local minPos = PickerArea.AbsolutePosition[axis]

				-- right cord of ColorPickerArea in pixels
				local maxPos = minPos+PickerArea.AbsoluteSize[axis]

				-- width of ColorPickerArea in pixels
				local PixelSize = PickerArea.AbsoluteSize[axis]

				-- raw Mouse X/Y pixel position
				local mouse = UserInputService:GetMouseLocation()[axis] - (axis=="Y" and 36 or 0)

				-- constraints
				if mouse<minPos then
					mouse = minPos
				elseif mouse > maxPos then
					mouse = maxPos
				end

				-- get percentage mouse is on
				local Pos = (mouse-minPos)/PixelSize

				-- move the visual Picker line
				if(axis == "X") then
					Picker.Position = UDim2.new(Pos,0,0,0)
				elseif(axis == "Y") then
					Picker.Position = UDim2.new(0,0,Pos,0)
				else
					warn("No such axis!")
				end

				-- set the ColorShower frame color
				ColorShower.BackgroundColor3 = getColor(Pos,ColorKeyPoints)

				if(frameToUpdate) then --If the current color change is supposed to influence a different frame:
					local Area = frameToUpdate:WaitForChild("ColorPickerArea")
					local Grad : UIGradient = Area:FindFirstChildOfClass('UIGradient')
					local colors = Grad.Color.Keypoints
					colors[2] = ColorSequenceKeypoint.new(colors[2].Time,ColorShower.BackgroundColor3)
					Grad.Color = ColorSequence.new(colors) --Change the color pallete of the second frame

					local color = getColor(Area:WaitForChild("Picker").Position[otherAxis].Scale,colors)
					if(frameToUpdate:FindFirstChild("ColorShower")) then
						frameToUpdate:WaitForChild("ColorShower").BackgroundColor3 = color --Update the color shower if its in the other frame
					else
						ColorShower.BackgroundColor3 = color --Update the color shower of this frame
						
						
						pcall(function()
							callback(color)
						end)
					end
				end

			until not selecting
		end

		-- upon the user ending selection
		function endSelection()
			-- this will stop the loop
			selecting = false
		end

		-- check input for selection beginning

		--Parameters for the following function:
		-- frame - the color picker frame
		-- axis - axis of color picking (axis of color picker)
		-- frameToUpdate? - use if the change of 'frame' is supposed to influence a different gradient
		-- otherAxis? - axis of 'frameToUpdate'

		local function enableColorPicker(frame, axis : "Y" | "X" , frameToUpdate : Frame | nil, otherAxis : "Y"? | "X"?)

			frame:WaitForChild("ColorPickerArea").InputBegan:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
					beginSelection(frame, axis, frameToUpdate, otherAxis)
				end
			end)

			frame:WaitForChild("ColorPickerArea").InputEnded:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
					endSelection()
				end
			end)
		end

		enableColorPicker(GUI:WaitForChild("Horizontal"), "X", GUI:WaitForChild("Vertical"), "Y") --Enable the horizontal color picker, to influence the vertical one
		enableColorPicker(GUI:WaitForChild("Vertical"), "Y") --Enable the vertical color picker, that does not influence any other color picker

		--The following code will change the ColorShower's color when the RGB changes:
		--Parameters for the following function:
		-- ColorShower - the ColorShower/frame that you want to change on RGB input
		-- RGBFrame - Frame including your RGB frames and their TextBox ValueBoxes 
		-- together - Whether the color shower should update using all RGB inputs or only the one changed
		-- onEnterPress - Whether should change color on FocusLost or when the text changes (any input)
		-- toUpdateOnChange - Whether to update the RGB values when anything influences the 'ColorShower' Color. True by default
		function RGBToColor(ColorShower : Frame, RGBFrame, together : boolean, onEnterPress : boolean, toUpdateOnChange : boolean?)
			local function setColor(frame)
				local color
				if(together) then --If to change color using all RGB values
					color = {}
					for _, colorFrame in pairs(RGBFrame:GetChildren()) do
						if(colorFrame:IsA("Frame")) then
							color[colorFrame.Name] = tonumber(colorFrame:WaitForChild("ValueBox").Text) --Store all RGB values in the table
						end
					end	
				else --To change only one aspect of the current color
					local originalColor = ColorShower.BackgroundColor3
					color = {
						R = originalColor.R*255;
						G = originalColor.G*255;
						B = originalColor.B*255;
					}
					color[frame.Name] = tonumber(frame:WaitForChild("ValueBox").Text) --Change the one axis/aspect of the color
				end

				ColorShower.BackgroundColor3 = Color3.fromRGB(color.R, color.G, color.B) --Set the color
			end

			for _, colorFrame in pairs(RGBFrame:GetChildren()) do
				if(colorFrame:IsA("Frame")) then
					if(onEnterPress) then
						colorFrame:WaitForChild("ValueBox").FocusLost:Connect(function()
							setColor(colorFrame)
						end)
					else
						colorFrame:WaitForChild("ValueBox"):GetPropertyChangedSignal("Text"):Connect(function()
							setColor(colorFrame)
						end)
					end
				end
			end

			if(toUpdateOnChange == true or toUpdateOnChange == nil) then
				ColorShower:GetPropertyChangedSignal("BackgroundColor3"):Connect(function() --When the color shower changes, update the RGB values
					RGBFrame:WaitForChild("R"):WaitForChild("ValueBox").Text = math.floor(ColorShower.BackgroundColor3.R*255)
					RGBFrame:WaitForChild("G"):WaitForChild("ValueBox").Text = math.floor(ColorShower.BackgroundColor3.G*255)
					RGBFrame:WaitForChild("B"):WaitForChild("ValueBox").Text = math.floor(ColorShower.BackgroundColor3.B*255)
				end)
			end
		end

		RGBToColor(GUI:WaitForChild("Vertical"):WaitForChild("ColorShower"), GUI:WaitForChild("RGBInput"), false, false)
	end
	coroutine.wrap(ANTLAM_fake_script)()

end


function lib:MakeBox(parent, text, clearonfocus, placeholder, callback)
	callback = callback or function() end
	-- Gui to Lua
	-- Gui to Lua
	-- Version: 3.2

	-- Instances:

	local Box = Instance.new("TextLabel")
	local Name = Instance.new("TextLabel")
	local UICorner = Instance.new("UICorner")
	local UICorner_2 = Instance.new("UICorner")
	local FakeBox = Instance.new("TextLabel")
	local UICorner_3 = Instance.new("UICorner")
	local TextBox = Instance.new("TextBox")
	local UICorner_4 = Instance.new("UICorner")
	local UICorner_5 = Instance.new("UICorner")

	--Properties:

	local e = Instance.new("UIStroke")


	e.Name = "UIStroke"
	e.Color = Color3.new(0,0,0)
	e.Parent = Box
	e.ApplyStrokeMode = "Border"
	e.Thickness = 1
	e.Transparency = 0

	Box.Name = "Box"
	Box.Parent = parent
	Box.BackgroundColor3 = Color3.fromRGB(27, 27, 27)
	Box.Position = UDim2.new(0.0153104486, 0, 0.286161661, 0)
	Box.Size = UDim2.new(0.984343886, 0, 0.0404677987, 0)
	Box.Font = Enum.Font.SourceSans
	Box.Text = ""
	Box.TextColor3 = Color3.fromRGB(0, 0, 0)
	Box.TextSize = 14.000

	Name.Name = "Name"
	Name.Parent = Box
	Name.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
	Name.BackgroundTransparency = 1.000
	Name.BorderSizePixel = 0
	Name.Position = UDim2.new(0.0210222341, 0, 0.288365632, 0)
	Name.Size = UDim2.new(0.723798573, 0, 0.488365114, 0)
	Name.Font = Enum.Font.JosefinSans
	Name.Text = "HEE"
	Name.TextColor3 = Color3.fromRGB(255, 255, 255)
	Name.TextScaled = true
	Name.TextSize = 14.000
	Name.TextWrapped = true
	Name.TextXAlignment = Enum.TextXAlignment.Left

	UICorner.CornerRadius = UDim.new(0, 4)
	UICorner.Parent = Name

	UICorner_2.Parent = Box

	FakeBox.Name = "FakeBox"
	FakeBox.Parent = Box
	FakeBox.BackgroundColor3 = Color3.fromRGB(17, 17, 17)
	FakeBox.BorderSizePixel = 0
	FakeBox.Position = UDim2.new(0.782999992, 0, 0.209000006, 0)
	FakeBox.Size = UDim2.new(0.180999994, 0, 0.617999971, 0)
	FakeBox.Font = Enum.Font.JosefinSans
	FakeBox.Text = ""
	FakeBox.TextColor3 = Color3.fromRGB(255, 255, 255)
	FakeBox.TextScaled = true
	FakeBox.TextSize = 14.000
	FakeBox.TextWrapped = true

	UICorner_3.CornerRadius = UDim.new(0, 4)
	UICorner_3.Parent = FakeBox

	TextBox.Parent = FakeBox
	TextBox.BackgroundColor3 = Color3.fromRGB(17, 17, 17)
	TextBox.Position = UDim2.new(0.104007214, 0, 0.208941206, 0)
	TextBox.Size = UDim2.new(0.859464586, 0, 0.617880166, 0)
	TextBox.Font = Enum.Font.JosefinSans
	TextBox.Text = ""
	TextBox.TextColor3 = Color3.fromRGB(235, 235, 235)
	TextBox.TextScaled = true
	TextBox.TextSize = 14.000
	TextBox.TextWrapped = true
	UICorner_5.CornerRadius = UDim.new(0, 4)
	UICorner_5.Parent = FakeBox

	UICorner_4.CornerRadius = UDim.new(0, 4)
	UICorner_4.Parent = TextBox
	TextBox.ClearTextOnFocus = clearonfocus
	TextBox.PlaceholderText = placeholder


	TextBox.FocusLost:Connect(function()
		callback(TextBox.Text)

	end)

	UICorner_2.Parent = TextBox

	UICorner_3.Parent = Box
end



function lib:MakeToggle(parent, text, callback)
	callback = callback or function() end
	-- Gui to Lua
	-- Version: 3.2

	-- Instances:

	local Toggle = Instance.new("TextButton")
	local UICorner = Instance.new("UICorner")
	local Name = Instance.new("TextLabel")
	local UICorner_2 = Instance.new("UICorner")
	local Toggle2 = Instance.new("Frame")
	local Color = Instance.new("TextLabel")
	local UICorner_3 = Instance.new("UICorner")
	local White = Instance.new("TextLabel")
	local UICorner_4 = Instance.new("UICorner")
	local a = Instance.new("UIStroke")
	local e = Instance.new("UIStroke")


	--Properties:

	Toggle.Name = "Toggle"
	Toggle.Parent = parent
	Toggle.BackgroundColor3 = Color3.fromRGB(27, 27, 27)
	Toggle.Position = UDim2.new(0.0153106041, 0, 0.496646464, 0)
	Toggle.Size = UDim2.new(0.98618257, 0, 0.037157286, 0)
	Toggle.Font = Enum.Font.JosefinSans
	Toggle.Text = ""
	Toggle.TextColor3 = Color3.fromRGB(255, 255, 255)
	Toggle.TextSize = 14.000
	Toggle.TextXAlignment = Enum.TextXAlignment.Left

	a.Name = "UIStroke"
	a.Color = Color3.new(0,0,0)
	a.Parent = Color
	a.ApplyStrokeMode = "Border"
	a.Thickness = 2
	a.Transparency = 0


	e.Name = "UIStroke"
	e.Color = Color3.new(0,0,0)
	e.Parent = Toggle
	e.ApplyStrokeMode = "Border"
	e.Thickness = 1
	e.Transparency = 0

	UICorner.Parent = Toggle

	Name.Name = "Name"
	Name.Parent = Toggle
	Name.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
	Name.BackgroundTransparency = 1.000
	Name.BorderSizePixel = 0
	Name.Position = UDim2.new(0.0210222341, 0, 0.288365632, 0)
	Name.Size = UDim2.new(0.723798573, 0, 0.488365114, 0)
	Name.Font = Enum.Font.JosefinSans
	Name.Text = text
	Name.TextColor3 = Color3.fromRGB(255, 255, 255)
	Name.TextScaled = true
	Name.TextSize = 14.000
	Name.TextWrapped = true
	Name.TextXAlignment = Enum.TextXAlignment.Left

	UICorner_2.CornerRadius = UDim.new(0, 4)
	UICorner_2.Parent = Name

	Toggle2.Name = "Toggle2"
	Toggle2.Parent = Toggle
	Toggle2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Toggle2.BackgroundTransparency = 1.000
	Toggle2.Position = UDim2.new(0.879999995, 0, 0.0700000003, 0)
	Toggle2.Size = UDim2.new(0.100000001, 0, 0.899999976, 0)

	Color.Name = "Color"
	Color.Parent = Toggle2
	Color.BackgroundColor3 = Color3.fromRGB(167, 167, 167)
	Color.BorderSizePixel = 0
	Color.Position = UDim2.new(0.0490535833, 0, 0.134746298, 0)
	Color.Size = UDim2.new(0.891975939, 0, 0.699591815, 0)
	Color.Font = Enum.Font.SourceSans
	Color.Text = ""
	Color.TextColor3 = Color3.fromRGB(52, 52, 52)
	Color.TextScaled = true
	Color.TextSize = 14.000
	Color.TextWrapped = true

	UICorner_3.CornerRadius = UDim.new(1, 0)
	UICorner_3.Parent = Color

	White.Name = "White"
	White.Parent = Color
	White.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	White.BorderSizePixel = 0
	White.Position = UDim2.new(0.1, 0,0.141, 0)
	White.Size = UDim2.new(0.35, 0,0.644, 0)
	White.Font = Enum.Font.SourceSans
	White.Text = ""
	White.TextColor3 = Color3.fromRGB(52, 52, 52)
	White.TextScaled = true
	White.TextSize = 14.000
	White.TextWrapped = true

	UICorner_4.CornerRadius = UDim.new(1, 0)
	UICorner_4.Parent = White

	local enabled = false

	Toggle.MouseButton1Down:Connect(function()
		local tweenInfo = TweenInfo.new(0.2)
		if enabled == false then
			enabled = true

			Color.BackgroundColor3 = Color3.fromRGB(0, 153, 167)
			local newProperties = {
				Position = UDim2.new(0.6, 0,0.141, 0)
			}
			local tween = game:GetService("TweenService"):Create(White, tweenInfo, newProperties)
			tween:Play()
			pcall(callback, true)
		else
			enabled = false
			Color.BackgroundColor3 = Color3.fromRGB(167, 167, 167)
			local newProperties = {
				Position = UDim2.new(0.1, 0,0.141, 0)
			}
			local tween = game:GetService("TweenService"):Create(White, tweenInfo, newProperties)
			tween:Play()
			pcall(callback, false)
		end
	end)
end



function lib:MakeButton(parent, name, callback)
	callback = callback or function() end
	local Button2 = Instance.new("TextButton")
	local UICorner = Instance.new("UICorner")
	local e = Instance.new("UIStroke")

	e.Name = "UIStroke"
	e.Color = Color3.new(0,0,0)
	e.Parent = Button2
	e.ApplyStrokeMode = "Border"
	e.Thickness = 1
	e.Transparency = 0

	UICorner.Parent = Button2
	Button2.Name = name
	Button2.Parent = parent
	Button2.BackgroundColor3 = Color3.fromRGB(27, 27, 27)
	Button2.Position = UDim2.new(0.0153106041, 0, 0.0205623731, 0)
	Button2.Size = UDim2.new(0.986, 0,0.036, 0)
	Button2.Font = "JosefinSans"
	Button2.TextColor3 = Color3.fromRGB(255, 255, 255)
	Button2.TextSize = 14.000
	Button2.Text = name

	Button2.MouseButton1Down:Connect(function()
		callback()
	end)
end

function lib:MakeSlider(parent, name,color,  minvalue, maxvalue, callback)
	-- Gui to Lua
	-- Version: 3.2

	-- Instances:

	local Slider = Instance.new("Frame")
	local SliderValue = Instance.new("TextLabel")
	local SliderText = Instance.new("TextLabel")
	local UICorner_3 = Instance.new("UICorner")

	--Properties:

	Slider.Name = "Slider"
	Slider.Parent = parent
	Slider.BackgroundColor3 = Color3.fromRGB(27, 27, 27)
	Slider.Position = UDim2.new(0.0153106041, 0, 0.181453466, 0)
	Slider.Size = UDim2.new(0.986071408, 0, 0.040922828, 0)

	SliderValue.Name = "SliderValue"
	SliderValue.Parent = Slider
	SliderValue.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
	SliderValue.BackgroundTransparency = 1.000
	SliderValue.BorderSizePixel = 0
	SliderValue.Position = UDim2.new(0.905701578, 0, 0.168335706, 0)
	SliderValue.Size = UDim2.new(0.07737156, 0, 0.296317965, 0)
	SliderValue.Font = "JosefinSans"
	SliderValue.Text = "100"
	SliderValue.TextColor3 = Color3.fromRGB(255, 255, 255)
	SliderValue.TextScaled = true
	SliderValue.TextSize = 14.000
	SliderValue.TextWrapped = true

	UICorner.CornerRadius = UDim.new(0, 4)
	UICorner.Parent = SliderValue

	UICorner_2.Parent = Slider

	SliderText.Name = "SliderText"
	SliderText.Parent = Slider
	SliderText.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
	SliderText.BackgroundTransparency = 1.000
	SliderText.BorderSizePixel = 0
	SliderText.Position = UDim2.new(0.0209249407, 0, 0.168335721, 0)
	SliderText.Size = UDim2.new(0.46632272, 0, 0.296317965, 0)
	SliderText.Font = Enum.Font.JosefinSans
	SliderText.Text = name
	SliderText.TextColor3 = Color3.fromRGB(255, 255, 255)
	SliderText.TextScaled = true
	SliderText.TextSize = 14.000
	SliderText.TextWrapped = true
	SliderText.TextXAlignment = Enum.TextXAlignment.Left

	UICorner_3.CornerRadius = UDim.new(0, 4)
	UICorner_3.Parent = SliderText









	-- Gui to Lua
	-- Version: 3.2

	-- Instances:

	local SliderButton = Instance.new("TextButton")
	local UICorner = Instance.new("UICorner")
	local Frame = Instance.new("Frame")
	local UICorner_2 = Instance.new("UICorner")

	--Properties:

	SliderButton.Name = "SliderButton"
	SliderButton.Parent = Slider
	SliderButton.BackgroundColor3 = Color3.fromRGB(79, 79, 79)
	SliderButton.BorderSizePixel = 0
	SliderButton.Position = UDim2.new(0.0192724131, 0, 0.624153078, 0)
	SliderButton.Size = UDim2.new(0.958630145, 0, 0.200000033, 0)
	SliderButton.Font = Enum.Font.SourceSans
	SliderButton.Text = ""
	SliderButton.TextColor3 = Color3.fromRGB(0, 0, 0)
	SliderButton.TextSize = 14.000

	UICorner.Parent = SliderButton

	Frame.Parent = SliderButton
	Frame.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
	Frame.BorderSizePixel = 0
	Frame.Position = UDim2.new(5.57752031e-08, 0, 0, 0)
	Frame.Size = UDim2.new(0.00941797812, 0, 1.00000012, 0)
	Frame.BackgroundColor3 = color

	local h = Instance.new("UICorner")
	h.CornerRadius = UDim.new(0, 8)
	h.Parent = SliderButton

	local p = Instance.new("UICorner")
	p.CornerRadius = UDim.new(0, 8)
	p.Parent = Frame
	local e = Instance.new("UIStroke")


	e.Name = "UIStroke"
	e.Color = Color3.new(0,0,0)
	e.Parent = Slider
	e.ApplyStrokeMode = "Border"
	e.Thickness = 1
	e.Transparency = 0

	local i = Instance.new("UIStroke")


	i.Name = "UIStroke"
	i.Color = Color3.fromRGB(150, 150, 150)
	i.Parent = SliderButton
	i.ApplyStrokeMode = "Border"
	i.Thickness = 2
	i.Transparency = 0

	UICorner_2.Parent = Frame


	minvalue = minvalue or 0
	maxvalue = maxvalue or 100


	-----Callback-----
	callback = callback or function() end


	-----Variables-----
	local mouse = game.Players.LocalPlayer:GetMouse()
	local uis = game:GetService("UserInputService")
	local Value;




	SliderButton.MouseButton1Down:Connect(function()
		Value = math.floor((((tonumber(maxvalue) - tonumber(minvalue)) / 549) * Frame.AbsoluteSize.X) + tonumber(minvalue)) or 0
		pcall(function()
			callback(Value)
		end)
		Frame.Size = UDim2.new(0, math.clamp(mouse.X - Frame.AbsolutePosition.X, 0, 549), 0, 9)
		moveconnection = mouse.Move:Connect(function()
			SliderValue.Text = Value
			Value = math.floor((((tonumber(maxvalue) - tonumber(minvalue)) / 549) * Frame.AbsoluteSize.X) + tonumber(minvalue))
			pcall(function()
				callback(Value)
			end)
			Frame.Size = UDim2.new(0, math.clamp(mouse.X - Frame.AbsolutePosition.X, 0, 549), 0, 9)
		end)
		releaseconnection = uis.InputEnded:Connect(function(Mouse)
			if Mouse.UserInputType == Enum.UserInputType.MouseButton1 then
				Value = math.floor((((tonumber(maxvalue) - tonumber(minvalue)) / 549) * Frame.AbsoluteSize.X) + tonumber(minvalue))
				pcall(function()
					callback(Value)
				end)
				Frame.Size = UDim2.new(0, math.clamp(mouse.X - Frame.AbsolutePosition.X, 0, 549), 0, 9)
				moveconnection:Disconnect()
				releaseconnection:Disconnect()
			end
		end)
	end)
end

return lib
